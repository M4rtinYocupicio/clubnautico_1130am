/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guis;

import entidades.Socio;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.ISociosDAO;

/**
 *
 * @author LV1823
 */
public class SociosForm extends javax.swing.JFrame 
{

    /**
     * Creates new form SociosForm
     */
    private final ISociosDAO sociosDAO;

    public SociosForm(ISociosDAO sociosDAO)
    {
        initComponents();
        this.sociosDAO = sociosDAO;
        this.llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void guardar()
    {
        // TODO: Comporbar si se agrega o se actualiza
        if(this.txtidsocio.getText().isEmpty())
        {
            this.agregar();
        }
    }
    
    private void agregar()
    {
        String nombre= this.txtnombre.getText();
        String curp= this.txtcurp.getText();
        // TODO: Validaciones de datos
        Socio socioNuevo = new Socio(nombre, curp);
        boolean seAgregoSocio = this.sociosDAO.agregar(socioNuevo);
        if(seAgregoSocio)
        {
            JOptionPane.showMessageDialog(this, "Se agrego el socio", 
                    "Informacion", JOptionPane.INFORMATION_MESSAGE);
            this.limpiar();
            this.llenarTabla();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "No se agrego el socio", 
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void llenarTabla()
    {
        List<Socio> listaSocios=this.sociosDAO.consultarTodos();
        DefaultTableModel modelo = (DefaultTableModel) this.tblSocios.getModel();
        modelo.setRowCount(0);
        listaSocios.forEach(socio -> {
            Object[] fila = new Object[3];
            fila[0] = socio.getIdSocio();
            fila[1] = socio.getNombre();
            fila[2] = socio.getCurp();
            modelo.addRow(fila);
        });
    }
    
    private void actualizar()
    {
        Long idSocio = Long.parseLong(this.txtidsocio.getText());
        String curp= this.txtcurp.getText();
        // TODO: Validaciones de datos
        Socio socioActualizado = new Socio(idSocio, curp);
        boolean seActualizaSocio = this.sociosDAO.actualizar(socioActualizado);
        if(seActualizaSocio)
        {
            JOptionPane.showMessageDialog(this, "Se agrego el socio", 
                    "Informacion", JOptionPane.INFORMATION_MESSAGE);
            this.limpiar();
            this.llenarTabla();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "No se agrego el socio", 
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void llenarFormulario(Socio socio)
    {
        this.txtidsocio.setText(socio.getIdSocio().toString());
        this.txtnombre.setText(socio.getNombre());
        this.txtcurp.setText(socio.getCurp());
    }
    
    private void eliminar()
    {
        //Obetenr el ID socio seleccionado...
        Long idSocioSeleccionado = this.getIdSocioSeleccionado();
        if(idSocioSeleccionado == null)
        {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un socio", 
                    "Informacion", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int opcionSeleccionada = JOptionPane.showConfirmDialog(this, 
                "¿Seguro que deseas eliminar al socio?", 
                "Confirmación", JOptionPane.YES_NO_OPTION);
        if(opcionSeleccionada == JOptionPane.NO_OPTION)
        {
            return;
        }
        boolean seEliminoSocio = this.sociosDAO.eliminar(idSocioSeleccionado);
        if(seEliminoSocio)
        {
            JOptionPane.showMessageDialog(this, "Se eliminó el socio", 
                    "Información", JOptionPane.INFORMATION_MESSAGE);
            this.llenarTabla();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "No se pudo eliminar al socio", 
                    "Información", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    public void editar()
    {
        //TODO: Falta implementar la DAO
        Long idSocioSeleccionado = this.getIdSocioSeleccionado();
        if(idSocioSeleccionado == null)
        {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un socio", 
                    "Informacion", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Socio socio= this.sociosDAO.consultar(idSocioSeleccionado);
        if(socio != null)
        {
            llenarFormulario(socio);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "El socio ya no existe", "Informacion", WIDTH);
        }
    }
    
    private Long getIdSocioSeleccionado()
    {
        int indiceFilaSeleccionada = this.tblSocios.getSelectedRow();
        if(indiceFilaSeleccionada != -1)
        {
            DefaultTableModel modelo = (DefaultTableModel) this.tblSocios.getModel();
            int indiceColumnaId = 0;
            Long idSocioSeleccionado = (Long) modelo.getValueAt(indiceFilaSeleccionada, indiceColumnaId);
            return idSocioSeleccionado;
        }
        else
        {
            return null;
        }
    }

    private void limpiar()
    {
        this.txtidsocio.setText("");
        this.txtnombre.setText("");
        this.txtcurp.setText("");
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblidsocio = new javax.swing.JLabel();
        lblnombre = new javax.swing.JLabel();
        lblcurp = new javax.swing.JLabel();
        txtidsocio = new javax.swing.JTextField();
        txtnombre = new javax.swing.JTextField();
        txtcurp = new javax.swing.JTextField();
        btnguardar = new javax.swing.JButton();
        btncancelar = new javax.swing.JButton();
        pnlTablaSocios = new javax.swing.JScrollPane();
        tblSocios = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administracion de socios");

        lblidsocio.setText("ID Socio:");

        lblnombre.setText("Nombre:");

        lblcurp.setText("CURP:");
        lblcurp.setToolTipText("");

        txtidsocio.setEditable(false);
        txtidsocio.setToolTipText("");

        btnguardar.setText("Guardar");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        btncancelar.setText("Cancelar");
        btncancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncancelarActionPerformed(evt);
            }
        });

        tblSocios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Socio", "Nombre", "CURP"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        pnlTablaSocios.setViewportView(tblSocios);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblidsocio, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(lblnombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblcurp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnguardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(btncancelar))
                    .addComponent(txtidsocio, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcurp)
                    .addComponent(txtnombre))
                .addGap(18, 18, 18)
                .addComponent(pnlTablaSocios, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblidsocio)
                    .addComponent(txtidsocio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblnombre)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcurp)
                    .addComponent(txtcurp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnguardar)
                    .addComponent(btncancelar))
                .addContainerGap(132, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pnlTablaSocios, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btncancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncancelarActionPerformed
        this.limpiar();
    }//GEN-LAST:event_btncancelarActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        this.guardar();
    }//GEN-LAST:event_btnguardarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        this.editar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        this.eliminar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btncancelar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JLabel lblcurp;
    private javax.swing.JLabel lblidsocio;
    private javax.swing.JLabel lblnombre;
    private javax.swing.JScrollPane pnlTablaSocios;
    private javax.swing.JTable tblSocios;
    private javax.swing.JTextField txtcurp;
    private javax.swing.JTextField txtidsocio;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables
}
